@model EasyLearning.Domain.Entity.Study

@{
    ViewBag.Title = "Add Study";
}

<section class="content-header">
    <h1>
        Add study for @ViewBag.Current
    </h1>
</section>


<section class="content">
    @using (Html.BeginForm("AddStudy", "office", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(x => x.CourseID)
        @Html.AntiForgeryToken()
        
        <div class="row">
            <div class="col-md-offset-3 col-md-6 col-sm-12">
                <dic class="box">
                    <div class="box-header">
                        <h3 class="box-title">Add study</h3>
                    </div>
                    <div class="box-body">
                        @if (TempData["error"] != null)
                        {
                            <div class="alert alert-danger alert-dismissable">
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                                @TempData["error"]
                            </div>
                        }
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group has-feedback">
                            @Html.LabelFor(model => model.Name)
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="glyphicon glyphicon-align-justify form-control-feedback"></span>
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group has-feedback">
                            @Html.LabelFor(model => model.Summary)
                            @Html.EditorFor(model => model.Summary, new { htmlAttributes = new { @class = "form-control", rows = 7} })
                            @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.Label("Video File")
                            <input type="file" id="video" name="video" class="form-control">
                            <p class="help-block">Any  Video file format. Max: 100 MB</p>
                        </div>

                        <div class="form-group">
                            @Html.Label("Material")
                            <input type="file" id="material" name="material" class="form-control">
                            <p class="help-block">Either PDF or Word doc. Should also include assignment if any.</p>
                        </div>
                        <button class="btn btn-flat btn-success" type="submit">Save Study</button>
                    </div>
                </dic>
            </div>
        </div>
    }
</section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
